{"version":3,"sources":["main.js","modules/verifyCard.js"],"names":["inputNumber","querySelector","number","e","numberCard","removeSpaceAndDash","checkIsNumber","reverseNumbers","oddNumber","evenNumber","resultAlgorithmLuhna","whatACard","algorithmLuhna","multiplyOddNumber","sumMultiplyOddNumber","sumEvenNumber","sumNumbers","replace","numbers","oddOrEven","parseInt","name","firstNumbers","lengthNumber","sliceNumber","cards","join","filterLengthNumber","filterFirstNumbers","resultText"],"mappings":"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","file":"main.1f19ae8e.bf90ae65.js","sourceRoot":"..","sourcesContent":["import checkCardNumber from \"./modules/verifyCard\";\r\n\r\nconst verifyCard = document.querySelector(\".verify-card\");\r\nconst inputNumber = document.querySelector(\".number-card\");\r\nconst btn = document.querySelector(\".btn\");\r\n\r\n\r\nverifyCard.addEventListener('submit', (e) =>{\r\n    e.preventDefault()\r\n    checkCardNumber(inputNumber.value)\r\n    inputNumber.value = ''\r\n})","const resultText = document.querySelector(\".result-text\");\r\n\r\nfunction checkCardNumber(number) {\r\n  if (number.length === 0) return alert(\"podaj numer karty\");\r\n\r\n  const numberCard = removeSpaceAndDash(number);\r\n  const checkIsNumber = !isNaN(Number(numberCard));\r\n\r\n  if (checkIsNumber) {\r\n    const reverseNumbers = numberCard.split(\"\").reverse();\r\n    const oddNumber = filterNumbers(reverseNumbers, 1);\r\n    const evenNumber = filterNumbers(reverseNumbers, 0);\r\n    const resultAlgorithmLuhna = algorithmLuhna(oddNumber, evenNumber);\r\n\r\n    if (resultAlgorithmLuhna) {\r\n      whatACard(numberCard);\r\n    } else {\r\n      resultText.textContent = \"Nieprawidłowy\";\r\n    }\r\n  }\r\n}\r\n\r\nconst algorithmLuhna = (oddNumber, evenNumber) => {\r\n  const multiplyOddNumber = oddNumber\r\n    .map((numb) => numb * 2)\r\n    .toString()\r\n    .split(\",\")\r\n    .join(\"\")\r\n    .split(\"\");\r\n  const sumMultiplyOddNumber = sumNumbers(multiplyOddNumber);\r\n  const sumEvenNumber = sumNumbers(evenNumber);\r\n  return (sumMultiplyOddNumber + sumEvenNumber) % 10 === 0;\r\n};\r\n\r\nconst removeSpaceAndDash = (number) => number.replace(/[ -]/g, \"\");\r\n\r\nconst filterNumbers = (number, oddOrEven) => {\r\n  const numbers = number.filter((numb, index) => index % 2 === oddOrEven);\r\n  return numbers;\r\n};\r\n\r\nconst sumNumbers = (number) =>\r\n  number.reduce((a, b) => parseInt(a) + parseInt(b));\r\n\r\nconst whatACard = (number) => {\r\n  const cards = [\r\n    {\r\n      name: \"Mastercard\",\r\n      firstNumbers: [22, 51, 52, 53, 54, 55],\r\n      lengthNumber: [16],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"American  Express\",\r\n      firstNumbers: [34, 37],\r\n      lengthNumber: [15],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"Visa\",\r\n      firstNumbers: [4],\r\n      lengthNumber: [13, 16],\r\n      sliceNumber: 1,\r\n    },\r\n  ];\r\n\r\n  cards.map(({ name, firstNumbers, lengthNumber, sliceNumber }) => {\r\n    const sliceNum = number.slice(0, sliceNumber);\r\n    const filterFirstNumbers = firstNumbers\r\n      .filter((el) => el == sliceNum)\r\n      .join(\"\");\r\n    const filterLengthNumber = lengthNumber.some((el) => el === number.length);\r\n    if (filterFirstNumbers && filterLengthNumber) {\r\n      resultText.textContent = name;\r\n    } else {\r\n      resultText.textContent = \"Nieprawidłowy\";\r\n    }\r\n  });\r\n};\r\n\r\nexport default checkCardNumber;\r\n"]}