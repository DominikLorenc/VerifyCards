{"version":3,"sources":["modules/verifyCard.js","main.js"],"names":["resultText","document","querySelector","checkCardNumber","number","length","alert","numberCard","removeSpaceAndDash","checkIsNumber","isNaN","Number","reverseNumbers","split","reverse","oddNumber","filterNumbers","evenNumber","resultAlgorithmLuhna","algorithmLuhna","whatACard","textContent","multiplyOddNumber","map","numb","toString","join","sumMultiplyOddNumber","sumNumbers","sumEvenNumber","replace","oddOrEven","numbers","filter","index","reduce","a","b","parseInt","cards","name","firstNumbers","lengthNumber","sliceNumber","sliceNum","slice","filterFirstNumbers","el","filterLengthNumber","some","verifyCard","inputNumber","btn","addEventListener","e","preventDefault","value"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const resultText = document.querySelector(\".result-text\");\r\n\r\nfunction checkCardNumber(number) {\r\n  if (number.length === 0) return alert(\"podaj numer karty\");\r\n\r\n  const numberCard = removeSpaceAndDash(number);\r\n  const checkIsNumber = !isNaN(Number(numberCard));\r\n\r\n  if (checkIsNumber) {\r\n    const reverseNumbers = numberCard.split(\"\").reverse();\r\n    const oddNumber = filterNumbers(reverseNumbers, 1);\r\n    const evenNumber = filterNumbers(reverseNumbers, 0);\r\n    const resultAlgorithmLuhna = algorithmLuhna(oddNumber, evenNumber);\r\n\r\n    if (resultAlgorithmLuhna) {\r\n      whatACard(numberCard);\r\n    } else {\r\n      resultText.textContent = \"NieprawidÅ‚owy\";\r\n    }\r\n  }\r\n}\r\n\r\nconst algorithmLuhna = (oddNumber, evenNumber) => {\r\n  const multiplyOddNumber = oddNumber\r\n    .map((numb) => numb * 2)\r\n    .toString()\r\n    .split(\",\")\r\n    .join(\"\")\r\n    .split(\"\");\r\n  const sumMultiplyOddNumber = sumNumbers(multiplyOddNumber);\r\n  const sumEvenNumber = sumNumbers(evenNumber);\r\n  return (sumMultiplyOddNumber + sumEvenNumber) % 10 === 0;\r\n};\r\n\r\nconst removeSpaceAndDash = (number) => number.replace(/[ -]/g, \"\");\r\n\r\nconst filterNumbers = (number, oddOrEven) => {\r\n  const numbers = number.filter((numb, index) => index % 2 === oddOrEven);\r\n  return numbers;\r\n};\r\n\r\nconst sumNumbers = (number) =>\r\n  number.reduce((a, b) => parseInt(a) + parseInt(b));\r\n\r\nconst whatACard = (number) => {\r\n  const cards = [\r\n    {\r\n      name: \"Mastercard\",\r\n      firstNumbers: [22, 51, 52, 53, 54, 55],\r\n      lengthNumber: [16],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"American  Express\",\r\n      firstNumbers: [34, 37],\r\n      lengthNumber: [15],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"Visa\",\r\n      firstNumbers: [4],\r\n      lengthNumber: [13, 16],\r\n      sliceNumber: 1,\r\n    },\r\n  ];\r\n\r\n  cards.map(({ name, firstNumbers, lengthNumber, sliceNumber }) => {\r\n    const sliceNum = number.slice(0, sliceNumber);\r\n    const filterFirstNumbers = firstNumbers\r\n      .filter((el) => el == sliceNum)\r\n      .join(\"\");\r\n    const filterLengthNumber = lengthNumber.some((el) => el === number.length);\r\n    if (filterFirstNumbers && filterLengthNumber) {\r\n      resultText.textContent = name;\r\n    }\r\n  });\r\n};\r\n\r\nexport default checkCardNumber;\r\n","import checkCardNumber from \"./modules/verifyCard\";\r\n\r\nconst verifyCard = document.querySelector(\".verify-card\");\r\nconst inputNumber = document.querySelector(\".number-card\");\r\nconst btn = document.querySelector(\".btn\");\r\n\r\n\r\nverifyCard.addEventListener('submit', (e) =>{\r\n    e.preventDefault()\r\n    checkCardNumber(inputNumber.value)\r\n    inputNumber.value = ''\r\n})"]}