{"version":3,"sources":["modules/verifyCard.js","main.js"],"names":["checkCardNumber","resultText","document","querySelector","number","length","alert","numberCard","removeSpaceAndDash","checkIsNumber","isNaN","Number","reverseNumbers","split","reverse","oddNumber","filterNumbers","evenNumber","algorithmLuhna","whatACard","textContent","multiplyOddNumber","map","numb","toString","join","sumNumbers","replace","oddOrEven","numbers","filter","index","reduce","a","b","parseInt","name","firstNumbers","lengthNumber","sliceNumber","sliceNum","slice","filterFirstNumbers","el","filterLengthNumber","some","verifyCard","inputNumber","btn","addEventListener","e","preventDefault","value"],"mappings":";AA8EeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Ef,IAAMC,EAAaC,SAASC,cAAc,gBAE1C,SAASH,EAAgBI,GACnBA,GAAkB,IAAlBA,EAAOC,OAAc,OAAOC,MAAM,qBAEhCC,IAAAA,EAAaC,EAAmBJ,GAGlCK,IAFmBC,MAAMC,OAAOJ,IAEjB,CACXK,IAAAA,EAAiBL,EAAWM,MAAM,IAAIC,UACtCC,EAAYC,EAAcJ,EAAgB,GAC1CK,EAAaD,EAAcJ,EAAgB,GACpBM,EAAeH,EAAWE,GAGrDE,EAAUZ,GAEVN,EAAWmB,YAAc,iBAK/B,IAAMF,EAAiB,SAACH,EAAWE,GAC3BI,IAAAA,EAAoBN,EACvBO,IAAI,SAACC,GAASA,OAAO,EAAPA,IACdC,WACAX,MAAM,KACNY,KAAK,IACLZ,MAAM,IAGF,OAFsBa,EAAWL,GAClBK,EAAWT,IACe,IAAO,GAGnDT,EAAqB,SAACJ,GAAWA,OAAAA,EAAOuB,QAAQ,QAAS,KAEzDX,EAAgB,SAACZ,EAAQwB,GAEtBC,OADSzB,EAAO0B,OAAO,SAACP,EAAMQ,GAAUA,OAAAA,EAAQ,IAAMH,KAIzDF,EAAa,SAACtB,GAClBA,OAAAA,EAAO4B,OAAO,SAACC,EAAGC,GAAMC,OAAAA,SAASF,GAAKE,SAASD,MAE3Cf,EAAY,SAACf,GACH,CACZ,CACEgC,KAAM,aACNC,aAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACnCC,aAAc,CAAC,IACfC,YAAa,GAEf,CACEH,KAAM,oBACNC,aAAc,CAAC,GAAI,IACnBC,aAAc,CAAC,IACfC,YAAa,GAEf,CACEH,KAAM,OACNC,aAAc,CAAC,GACfC,aAAc,CAAC,GAAI,IACnBC,YAAa,IAIXjB,IAAI,SAAuD,GAApDc,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,aAAcC,EAAAA,EAAAA,aAAcC,EAAAA,EAAAA,YACvCC,EAAWpC,EAAOqC,MAAM,EAAGF,GAC3BG,EAAqBL,EACxBP,OAAO,SAACa,GAAOA,OAAAA,GAAMH,IACrBf,KAAK,IACFmB,EAAqBN,EAAaO,KAAK,SAACF,GAAOA,OAAAA,IAAOvC,EAAOC,SAC/DqC,GAAsBE,IACxB3C,EAAWmB,YAAcgB,MAKhBpC,EAAAA,EAAAA,QAAAA,QAAAA;;ACvEf,aAPA,IAAA,EAAA,EAAA,QAAA,yBAOA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALA,IAAM8C,EAAa5C,SAASC,cAAc,gBACpC4C,EAAc7C,SAASC,cAAc,gBACrC6C,EAAM9C,SAASC,cAAc,QAGnC2C,EAAWG,iBAAiB,SAAU,SAACC,GACnCA,EAAEC,kBACcJ,EAAAA,EAAAA,SAAAA,EAAYK,OAC5BL,EAAYK,MAAQ","file":"main.ae32bcc0.js","sourceRoot":"..","sourcesContent":["const resultText = document.querySelector(\".result-text\");\r\n\r\nfunction checkCardNumber(number) {\r\n  if (number.length === 0) return alert(\"podaj numer karty\");\r\n\r\n  const numberCard = removeSpaceAndDash(number);\r\n  const checkIsNumber = !isNaN(Number(numberCard));\r\n\r\n  if (checkIsNumber) {\r\n    const reverseNumbers = numberCard.split(\"\").reverse();\r\n    const oddNumber = filterNumbers(reverseNumbers, 1);\r\n    const evenNumber = filterNumbers(reverseNumbers, 0);\r\n    const resultAlgorithmLuhna = algorithmLuhna(oddNumber, evenNumber);\r\n\r\n    if (resultAlgorithmLuhna) {\r\n      whatACard(numberCard);\r\n    } else {\r\n      resultText.textContent = \"NieprawidÅ‚owy\";\r\n    }\r\n  }\r\n}\r\n\r\nconst algorithmLuhna = (oddNumber, evenNumber) => {\r\n  const multiplyOddNumber = oddNumber\r\n    .map((numb) => numb * 2)\r\n    .toString()\r\n    .split(\",\")\r\n    .join(\"\")\r\n    .split(\"\");\r\n  const sumMultiplyOddNumber = sumNumbers(multiplyOddNumber);\r\n  const sumEvenNumber = sumNumbers(evenNumber);\r\n  return (sumMultiplyOddNumber + sumEvenNumber) % 10 === 0;\r\n};\r\n\r\nconst removeSpaceAndDash = (number) => number.replace(/[ -]/g, \"\");\r\n\r\nconst filterNumbers = (number, oddOrEven) => {\r\n  const numbers = number.filter((numb, index) => index % 2 === oddOrEven);\r\n  return numbers;\r\n};\r\n\r\nconst sumNumbers = (number) =>\r\n  number.reduce((a, b) => parseInt(a) + parseInt(b));\r\n\r\nconst whatACard = (number) => {\r\n  const cards = [\r\n    {\r\n      name: \"Mastercard\",\r\n      firstNumbers: [22, 51, 52, 53, 54, 55],\r\n      lengthNumber: [16],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"American  Express\",\r\n      firstNumbers: [34, 37],\r\n      lengthNumber: [15],\r\n      sliceNumber: 2,\r\n    },\r\n    {\r\n      name: \"Visa\",\r\n      firstNumbers: [4],\r\n      lengthNumber: [13, 16],\r\n      sliceNumber: 1,\r\n    },\r\n  ];\r\n\r\n  cards.map(({ name, firstNumbers, lengthNumber, sliceNumber }) => {\r\n    const sliceNum = number.slice(0, sliceNumber);\r\n    const filterFirstNumbers = firstNumbers\r\n      .filter((el) => el == sliceNum)\r\n      .join(\"\");\r\n    const filterLengthNumber = lengthNumber.some((el) => el === number.length);\r\n    if (filterFirstNumbers && filterLengthNumber) {\r\n      resultText.textContent = name;\r\n    }\r\n  });\r\n};\r\n\r\nexport default checkCardNumber;\r\n","import checkCardNumber from \"./modules/verifyCard\";\r\n\r\nconst verifyCard = document.querySelector(\".verify-card\");\r\nconst inputNumber = document.querySelector(\".number-card\");\r\nconst btn = document.querySelector(\".btn\");\r\n\r\n\r\nverifyCard.addEventListener('submit', (e) =>{\r\n    e.preventDefault()\r\n    checkCardNumber(inputNumber.value)\r\n    inputNumber.value = ''\r\n})"]}